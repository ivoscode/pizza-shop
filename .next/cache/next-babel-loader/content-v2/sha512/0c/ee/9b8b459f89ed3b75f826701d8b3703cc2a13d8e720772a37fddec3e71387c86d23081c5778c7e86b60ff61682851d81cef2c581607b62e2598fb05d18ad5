{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/ivo/Desktop/Tutorials/Maximilaian/react course/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/ivo/Desktop/Tutorials/Maximilaian/react course/store/cart-context.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from \"react\";\nvar CartContext = /*#__PURE__*/React.createContext({\n  isCartOpened: function isCartOpened() {},\n  setIsCartOpened: function setIsCartOpened() {},\n  items: [],\n  totalAmount: 0,\n  addItem: function addItem(item) {},\n  removeItem: function removeItem(id) {}\n});\nexport function CartContextProvider(props) {\n  _s();\n\n  var defaultCartState = {\n    items: [],\n    totalAmount: 0,\n    isCartOpened: false\n  };\n\n  var cartReducer = function cartReducer(state, action) {\n    if (action.type === \"ADD\") {\n      var updatedItems = state.items.concat(action.item);\n      var updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      });\n    } else if (action.type === \"OPEN_CART\") {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isCartOpened: action.value\n      });\n    }\n\n    return defaultCartState;\n  };\n\n  var _useReducer = useReducer(cartReducer, defaultCartState),\n      cartState = _useReducer[0],\n      dispatchCartAction = _useReducer[1];\n\n  var setIsCartOpened = function setIsCartOpened(value) {\n    dispatchCartAction({\n      type: \"OPEN_CART\",\n      value: value\n    });\n  };\n\n  var addItemToCartHandler = function addItemToCartHandler(item) {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  var removeItemFromCartHandler = function removeItemFromCartHandler(id) {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  var cartContext = {\n    isCartOpened: cartState.isCartOpened,\n    setIsCartOpened: setIsCartOpened,\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartContextProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartContextProvider;\nexport default CartContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/ivo/Desktop/Tutorials/Maximilaian/react course/store/cart-context.js"],"names":["React","useReducer","CartContext","createContext","isCartOpened","setIsCartOpened","items","totalAmount","addItem","item","removeItem","id","CartContextProvider","props","defaultCartState","cartReducer","state","action","type","updatedItems","concat","updatedTotalAmount","price","amount","value","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","children"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,IAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,YAAY,EAAE,wBAAM,CAAE,CADgB;AAEtCC,EAAAA,eAAe,EAAE,2BAAM,CAAE,CAFa;AAGtCC,EAAAA,KAAK,EAAE,EAH+B;AAItCC,EAAAA,WAAW,EAAE,CAJyB;AAKtCC,EAAAA,OAAO,EAAE,iBAACC,IAAD,EAAU,CAAE,CALiB;AAMtCC,EAAAA,UAAU,EAAE,oBAACC,EAAD,EAAQ,CAAE;AANgB,CAApB,CAApB;AASA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACzC,MAAMC,gBAAgB,GAAG;AACvBR,IAAAA,KAAK,EAAE,EADgB;AAEvBC,IAAAA,WAAW,EAAE,CAFU;AAGvBH,IAAAA,YAAY,EAAE;AAHS,GAAzB;;AAKA,MAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,QAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACV,KAAN,CAAYc,MAAZ,CAAmBH,MAAM,CAACR,IAA1B,CAArB;AACA,UAAMY,kBAAkB,GACtBL,KAAK,CAACT,WAAN,GAAoBU,MAAM,CAACR,IAAP,CAAYa,KAAZ,GAAoBL,MAAM,CAACR,IAAP,CAAYc,MADtD;AAEA,6CACKP,KADL;AAEEV,QAAAA,KAAK,EAAEa,YAFT;AAGEZ,QAAAA,WAAW,EAAEc;AAHf;AAKD,KATD,MASO,IAAIJ,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AACtC,6CAAYF,KAAZ;AAAmBZ,QAAAA,YAAY,EAAEa,MAAM,CAACO;AAAxC;AACD;;AAED,WAAOV,gBAAP;AACD,GAfD;;AANyC,oBAsBDb,UAAU,CAChDc,WADgD,EAEhDD,gBAFgD,CAtBT;AAAA,MAsBlCW,SAtBkC;AAAA,MAsBvBC,kBAtBuB;;AA2BzC,MAAMrB,eAAe,GAAG,SAAlBA,eAAkB,CAACmB,KAAD,EAAW;AACjCE,IAAAA,kBAAkB,CAAC;AAAER,MAAAA,IAAI,EAAE,WAAR;AAAqBM,MAAAA,KAAK,EAAEA;AAA5B,KAAD,CAAlB;AACD,GAFD;;AAGA,MAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAClB,IAAD,EAAU;AACrCiB,IAAAA,kBAAkB,CAAC;AAAER,MAAAA,IAAI,EAAE,KAAR;AAAeT,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAGA,MAAMmB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACjB,EAAD,EAAQ;AACxCe,IAAAA,kBAAkB,CAAC;AAAER,MAAAA,IAAI,EAAE,QAAR;AAAkBP,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,MAAMkB,WAAW,GAAG;AAClBzB,IAAAA,YAAY,EAAEqB,SAAS,CAACrB,YADN;AAElBC,IAAAA,eAAe,EAAEA,eAFC;AAGlBC,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KAHC;AAIlBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAJL;AAKlBC,IAAAA,OAAO,EAAEmB,oBALS;AAMlBjB,IAAAA,UAAU,EAAEkB;AANM,GAApB;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGhB,KAAK,CAACiB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlDelB,mB;;KAAAA,mB;AAmDhB,eAAeV,WAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\nconst CartContext = React.createContext({\n  isCartOpened: () => {},\n  setIsCartOpened: () => {},\n  items: [],\n  totalAmount: 0,\n  addItem: (item) => {},\n  removeItem: (id) => {},\n});\n\nexport function CartContextProvider(props) {\n  const defaultCartState = {\n    items: [],\n    totalAmount: 0,\n    isCartOpened: false,\n  };\n  const cartReducer = (state, action) => {\n    if (action.type === \"ADD\") {\n      const updatedItems = state.items.concat(action.item);\n      const updatedTotalAmount =\n        state.totalAmount + action.item.price * action.item.amount;\n      return {\n        ...state,\n        items: updatedItems,\n        totalAmount: updatedTotalAmount,\n      };\n    } else if (action.type === \"OPEN_CART\") {\n      return { ...state, isCartOpened: action.value };\n    }\n\n    return defaultCartState;\n  };\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const setIsCartOpened = (value) => {\n    dispatchCartAction({ type: \"OPEN_CART\", value: value });\n  };\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    isCartOpened: cartState.isCartOpened,\n    setIsCartOpened: setIsCartOpened,\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n}\nexport default CartContext;\n"]},"metadata":{},"sourceType":"module"}