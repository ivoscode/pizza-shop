{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivo/Desktop/Tutorials/Maximilaian/react course/store/cart-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nvar CartContext = /*#__PURE__*/React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: function addItem(item) {},\n  removeItem: function removeItem(id) {}\n});\nexport function CartContextProvider(props) {\n  _s();\n\n  var _useState = useState(false),\n      isCartOpened = _useState[0],\n      setIsCartOpened = _useState[1];\n\n  var addItemToCartHandler = function addItemToCartHandler() {};\n\n  var removeItemFromCartHandler = function removeItemFromCartHandler() {};\n\n  var ctxvalue = {\n    isCartOpened: isCartOpened,\n    setIsCartOpened: setIsCartOpened,\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: ctxvalue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartContextProvider, \"HX2RjWWGRN8eQdcYKBdqOsCvlXs=\");\n\n_c = CartContextProvider;\nexport default CartContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/ivo/Desktop/Tutorials/Maximilaian/react course/store/cart-context.js"],"names":["React","useState","CartContext","createContext","items","totalAmount","addItem","item","removeItem","id","CartContextProvider","props","isCartOpened","setIsCartOpened","addItemToCartHandler","removeItemFromCartHandler","ctxvalue","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,IAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,WAAW,EAAE,CAFyB;AAGtCC,EAAAA,OAAO,EAAE,iBAACC,IAAD,EAAU,CAAE,CAHiB;AAItCC,EAAAA,UAAU,EAAE,oBAACC,EAAD,EAAQ,CAAE;AAJgB,CAApB,CAApB;AAOA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAAA,kBACDV,QAAQ,CAAC,KAAD,CADP;AAAA,MAClCW,YADkC;AAAA,MACpBC,eADoB;;AAEzC,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM,CAAE,CAArC;;AACA,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM,CAAE,CAA1C;;AAEA,MAAMC,QAAQ,GAAG;AACfJ,IAAAA,YAAY,EAAEA,YADC;AAEfC,IAAAA,eAAe,EAAEA,eAFF;AAGfT,IAAAA,KAAK,EAAE,EAHQ;AAIfC,IAAAA,WAAW,EAAE,CAJE;AAKfC,IAAAA,OAAO,EAAEQ,oBALM;AAMfN,IAAAA,UAAU,EAAEO;AANG,GAAjB;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,QAA7B;AAAA,cACGL,KAAK,CAACM;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlBeP,mB;;KAAAA,mB;AAmBhB,eAAeR,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst CartContext = React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: (item) => {},\n  removeItem: (id) => {},\n});\n\nexport function CartContextProvider(props) {\n  const [isCartOpened, setIsCartOpened] = useState(false);\n  const addItemToCartHandler = () => {};\n  const removeItemFromCartHandler = () => {};\n\n  const ctxvalue = {\n    isCartOpened: isCartOpened,\n    setIsCartOpened: setIsCartOpened,\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n  return (\n    <CartContext.Provider value={ctxvalue}>\n      {props.children}\n    </CartContext.Provider>\n  );\n}\nexport default CartContext;\n"]},"metadata":{},"sourceType":"module"}