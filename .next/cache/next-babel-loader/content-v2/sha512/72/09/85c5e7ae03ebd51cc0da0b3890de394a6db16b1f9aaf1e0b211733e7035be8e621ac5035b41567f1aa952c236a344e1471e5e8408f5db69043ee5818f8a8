{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivo/Desktop/Tutorials/Maximilaian/react course/components/Cart/cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport Modal from \"../UI/modal\";\nimport CartItem from \"./cartItem\";\nexport default function Cart(props) {\n  _s();\n\n  var _this = this;\n\n  var ctx = useContext(CartContext);\n  console.log(ctx);\n\n  var cartItemRemoveHandler = function cartItemRemoveHandler(id) {};\n\n  var cartItemAddHandler = function cartItemAddHandler(item) {};\n\n  var cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: ctx.items.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(CartItem, {\n        name: item.name,\n        amount: item.amount,\n        price: item.price,\n        onRemove: cartItemRemoveHandler.bind(null, item.id),\n        onAdd: cartItemAddHandler.bind(null, item)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n\n  var totalAmount = \"\\xA3\".concat(ctx.totalAmount.toFixed(2));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpened: ctx.isCartOpened,\n      onClose: function onClose() {\n        return ctx.setIsCartOpened(false);\n      },\n      children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return ctx.setIsCartOpened(false);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), ctx.items.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Cart, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/ivo/Desktop/Tutorials/Maximilaian/react course/components/Cart/cart.js"],"names":["useContext","CartContext","Modal","CartItem","Cart","props","ctx","console","log","cartItemRemoveHandler","id","cartItemAddHandler","item","cartItems","items","map","name","amount","price","bind","totalAmount","toFixed","isCartOpened","setIsCartOpened","length"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA;;AAClC,MAAMC,GAAG,GAAGN,UAAU,CAACC,WAAD,CAAtB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,MAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,EAAD,EAAQ,CAAE,CAAxC;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU,CAAE,CAAvC;;AACA,MAAMC,SAAS,gBACb;AAAA,cACGP,GAAG,CAACQ,KAAJ,CAAUC,GAAV,CAAc,UAACH,IAAD,EAAU;AACvB,0BACE,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,IAAI,CAACI,IAFb;AAGE,QAAA,MAAM,EAAEJ,IAAI,CAACK,MAHf;AAIE,QAAA,KAAK,EAAEL,IAAI,CAACM,KAJd;AAKE,QAAA,QAAQ,EAAET,qBAAqB,CAACU,IAAtB,CAA2B,IAA3B,EAAiCP,IAAI,CAACF,EAAtC,CALZ;AAME,QAAA,KAAK,EAAEC,kBAAkB,CAACQ,IAAnB,CAAwB,IAAxB,EAA8BP,IAA9B;AANT,SACOA,IAAI,CAACF,EADZ;AAAA;AAAA;AAAA;AAAA,eADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAgBA,MAAMU,WAAW,iBAAOd,GAAG,CAACc,WAAJ,CAAgBC,OAAhB,CAAwB,CAAxB,CAAP,CAAjB;AACA,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEf,GAAG,CAACgB,YADhB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMhB,GAAG,CAACiB,eAAJ,CAAoB,KAApB,CAAN;AAAA,OAFX;AAAA,iBAIGV,SAJH,eAKE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOO;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAMd,GAAG,CAACiB,eAAJ,CAAoB,KAApB,CAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGjB,GAAG,CAACQ,KAAJ,CAAUU,MAAV,GAAmB,CAAnB,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD;;GAxCuBpB,I;;KAAAA,I","sourcesContent":["import { useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport Modal from \"../UI/modal\";\nimport CartItem from \"./cartItem\";\n\nexport default function Cart(props) {\n  const ctx = useContext(CartContext);\n  console.log(ctx);\n  const cartItemRemoveHandler = (id) => {};\n  const cartItemAddHandler = (item) => {};\n  const cartItems = (\n    <ul>\n      {ctx.items.map((item) => {\n        return (\n          <CartItem\n            key={item.id}\n            name={item.name}\n            amount={item.amount}\n            price={item.price}\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\n            onAdd={cartItemAddHandler.bind(null, item)}\n          />\n        );\n      })}\n    </ul>\n  );\n  const totalAmount = `Â£${ctx.totalAmount.toFixed(2)}`;\n  return (\n    <>\n      <Modal\n        isOpened={ctx.isCartOpened}\n        onClose={() => ctx.setIsCartOpened(false)}\n      >\n        {cartItems}\n        <div>\n          <span>Total Amount</span>\n          <span>{totalAmount}</span>\n        </div>\n        <div>\n          <button onClick={() => ctx.setIsCartOpened(false)}>Close</button>\n          {ctx.items.length > 0 && <button>Order</button>}\n        </div>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}