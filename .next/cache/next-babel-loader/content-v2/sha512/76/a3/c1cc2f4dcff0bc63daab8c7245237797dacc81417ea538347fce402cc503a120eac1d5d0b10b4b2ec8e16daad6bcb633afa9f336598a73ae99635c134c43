{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ivo/Desktop/Tutorials/Maximilaian/react course/components/Cart/cart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport Modal from \"../UI/modal\";\nimport CartItem from \"./cartItem\";\nexport default function Cart(props) {\n  const ctx = useContext(CartContext);\n  console.log(ctx);\n\n  const cartItemRemoveHandler = id => {};\n\n  const cartItemAddHandler = item => {\n    ctx.addItem(_objectSpread(_objectSpread({}, item), {}, {\n      amount: 1\n    }));\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: ctx.items.map(item => {\n      return /*#__PURE__*/_jsxDEV(CartItem, {\n        name: item.name,\n        amount: item.amount,\n        price: item.price,\n        onRemove: cartItemRemoveHandler.bind(null, item.id),\n        onAdd: cartItemAddHandler.bind(null, item)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n\n  const totalAmount = `£${ctx.totalAmount.toFixed(2)}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpened: ctx.isCartOpened,\n      onClose: () => ctx.setIsCartOpened(false),\n      children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => ctx.setIsCartOpened(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), ctx.items.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/ivo/Desktop/Tutorials/Maximilaian/react course/components/Cart/cart.js"],"names":["useContext","CartContext","Modal","CartItem","Cart","props","ctx","console","log","cartItemRemoveHandler","id","cartItemAddHandler","item","addItem","amount","cartItems","items","map","name","price","bind","totalAmount","toFixed","isCartOpened","setIsCartOpened","length"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAMC,GAAG,GAAGN,UAAU,CAACC,WAAD,CAAtB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAMG,qBAAqB,GAAIC,EAAD,IAAQ,CAAE,CAAxC;;AACA,QAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACnCN,IAAAA,GAAG,CAACO,OAAJ,iCAAiBD,IAAjB;AAAuBE,MAAAA,MAAM,EAAE;AAA/B;AACD,GAFD;;AAGA,QAAMC,SAAS,gBACb;AAAA,cACGT,GAAG,CAACU,KAAJ,CAAUC,GAAV,CAAeL,IAAD,IAAU;AACvB,0BACE,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,IAAI,CAACM,IAFb;AAGE,QAAA,MAAM,EAAEN,IAAI,CAACE,MAHf;AAIE,QAAA,KAAK,EAAEF,IAAI,CAACO,KAJd;AAKE,QAAA,QAAQ,EAAEV,qBAAqB,CAACW,IAAtB,CAA2B,IAA3B,EAAiCR,IAAI,CAACF,EAAtC,CALZ;AAME,QAAA,KAAK,EAAEC,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BR,IAA9B;AANT,SACOA,IAAI,CAACF,EADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAgBA,QAAMW,WAAW,GAAI,IAAGf,GAAG,CAACe,WAAJ,CAAgBC,OAAhB,CAAwB,CAAxB,CAA2B,EAAnD;AACA,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEhB,GAAG,CAACiB,YADhB;AAEE,MAAA,OAAO,EAAE,MAAMjB,GAAG,CAACkB,eAAJ,CAAoB,KAApB,CAFjB;AAAA,iBAIGT,SAJH,eAKE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOM;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAMf,GAAG,CAACkB,eAAJ,CAAoB,KAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGlB,GAAG,CAACU,KAAJ,CAAUS,MAAV,GAAmB,CAAnB,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD","sourcesContent":["import { useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport Modal from \"../UI/modal\";\nimport CartItem from \"./cartItem\";\n\nexport default function Cart(props) {\n  const ctx = useContext(CartContext);\n  console.log(ctx);\n  const cartItemRemoveHandler = (id) => {};\n  const cartItemAddHandler = (item) => {\n    ctx.addItem({ ...item, amount: 1 });\n  };\n  const cartItems = (\n    <ul>\n      {ctx.items.map((item) => {\n        return (\n          <CartItem\n            key={item.id}\n            name={item.name}\n            amount={item.amount}\n            price={item.price}\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\n            onAdd={cartItemAddHandler.bind(null, item)}\n          />\n        );\n      })}\n    </ul>\n  );\n  const totalAmount = `£${ctx.totalAmount.toFixed(2)}`;\n  return (\n    <>\n      <Modal\n        isOpened={ctx.isCartOpened}\n        onClose={() => ctx.setIsCartOpened(false)}\n      >\n        {cartItems}\n        <div>\n          <span>Total Amount</span>\n          <span>{totalAmount}</span>\n        </div>\n        <div>\n          <button onClick={() => ctx.setIsCartOpened(false)}>Close</button>\n          {ctx.items.length > 0 && <button>Order</button>}\n        </div>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}