{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivo/Desktop/Tutorials/Maximilaian/react course/store/cart-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nvar CartContext = /*#__PURE__*/React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: function addItem(item) {},\n  removeItem: function removeItem(id) {}\n});\nexport function CartContextProvider(props) {\n  _s();\n\n  var _useState = useState(false),\n      isModalOpened = _useState[0],\n      setIsModalOpened = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      isLoggedIn: true,\n      isModalOpened: isModalOpened\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartContextProvider, \"MdbwFspO4bR4qH18wPc7c3JlqsM=\");\n\n_c = CartContextProvider;\nexport default CartContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/ivo/Desktop/Tutorials/Maximilaian/react course/store/cart-context.js"],"names":["React","useState","CartContext","createContext","items","totalAmount","addItem","item","removeItem","id","CartContextProvider","props","isModalOpened","setIsModalOpened","isLoggedIn","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,IAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,WAAW,EAAE,CAFyB;AAGtCC,EAAAA,OAAO,EAAE,iBAACC,IAAD,EAAU,CAAE,CAHiB;AAItCC,EAAAA,UAAU,EAAE,oBAACC,EAAD,EAAQ,CAAE;AAJgB,CAApB,CAApB;AAOA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAAA,kBACCV,QAAQ,CAAC,KAAD,CADT;AAAA,MAClCW,aADkC;AAAA,MACnBC,gBADmB;;AAEzC,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,IAAd;AAAoBF,MAAAA,aAAa,EAAEA;AAAnC,KADT;AAAA,cAGGD,KAAK,CAACI;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GATeL,mB;;KAAAA,mB;AAUhB,eAAeR,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst CartContext = React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: (item) => {},\n  removeItem: (id) => {},\n});\n\nexport function CartContextProvider(props) {\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  return (\n    <CartContext.Provider\n      value={{ isLoggedIn: true, isModalOpened: isModalOpened }}\n    >\n      {props.children}\n    </CartContext.Provider>\n  );\n}\nexport default CartContext;\n"]},"metadata":{},"sourceType":"module"}