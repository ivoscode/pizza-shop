{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivo/Desktop/Tutorials/Maximilaian/react course/store/cart-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nvar CartContext = /*#__PURE__*/React.createContext({\n  isCartOpened: function isCartOpened() {},\n  setIsCartOpened: function setIsCartOpened() {},\n  items: [{}],\n  totalAmount: 0,\n  addItem: function addItem(item) {},\n  removeItem: function removeItem(id) {}\n});\nvar defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nvar cartReducer = function cartReducer(state, action) {\n  return defaultCartState;\n};\n\nexport function CartContextProvider(props) {\n  _s();\n\n  var _useReducer = useReducer(cartReducer, defaultCartState, init),\n      cartState = _useReducer[0],\n      dispatchCartAction = _useReducer[1];\n\n  var _useState = useState(false),\n      isCartOpened = _useState[0],\n      setIsCartOpened = _useState[1];\n\n  var addItemToCartHandler = function addItemToCartHandler() {};\n\n  var removeItemFromCartHandler = function removeItemFromCartHandler() {};\n\n  var ctxvalue = {\n    isCartOpened: isCartOpened,\n    setIsCartOpened: setIsCartOpened,\n    items: cartState.items,\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: ctxvalue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartContextProvider, \"mY7hJ1duDi1IGqUkzxmRY4ogHGQ=\");\n\n_c = CartContextProvider;\nexport default CartContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/ivo/Desktop/Tutorials/Maximilaian/react course/store/cart-context.js"],"names":["React","useReducer","useState","CartContext","createContext","isCartOpened","setIsCartOpened","items","totalAmount","addItem","item","removeItem","id","defaultCartState","cartReducer","state","action","CartContextProvider","props","init","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","ctxvalue","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,IAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,YAAY,EAAE,wBAAM,CAAE,CADgB;AAEtCC,EAAAA,eAAe,EAAE,2BAAM,CAAE,CAFa;AAGtCC,EAAAA,KAAK,EAAE,CAAC,EAAD,CAH+B;AAItCC,EAAAA,WAAW,EAAE,CAJyB;AAKtCC,EAAAA,OAAO,EAAE,iBAACC,IAAD,EAAU,CAAE,CALiB;AAMtCC,EAAAA,UAAU,EAAE,oBAACC,EAAD,EAAQ,CAAE;AANgB,CAApB,CAApB;AASA,IAAMC,gBAAgB,GAAG;AACvBN,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAIA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,SAAOH,gBAAP;AACD,CAFD;;AAIA,OAAO,SAASI,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAAA,oBACDjB,UAAU,CAChDa,WADgD,EAEhDD,gBAFgD,EAGhDM,IAHgD,CADT;AAAA,MAClCC,SADkC;AAAA,MACvBC,kBADuB;;AAAA,kBAODnB,QAAQ,CAAC,KAAD,CAPP;AAAA,MAOlCG,YAPkC;AAAA,MAOpBC,eAPoB;;AAQzC,MAAMgB,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM,CAAE,CAArC;;AACA,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM,CAAE,CAA1C;;AAEA,MAAMC,QAAQ,GAAG;AACfnB,IAAAA,YAAY,EAAEA,YADC;AAEfC,IAAAA,eAAe,EAAEA,eAFF;AAGfC,IAAAA,KAAK,EAAEa,SAAS,CAACb,KAHF;AAIfC,IAAAA,WAAW,EAAE,CAJE;AAKfC,IAAAA,OAAO,EAAEa,oBALM;AAMfX,IAAAA,UAAU,EAAEY;AANG,GAAjB;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,QAA7B;AAAA,cACGN,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBeR,mB;;KAAAA,mB;AAyBhB,eAAed,WAAf","sourcesContent":["import React, { useReducer, useState } from \"react\";\n\nconst CartContext = React.createContext({\n  isCartOpened: () => {},\n  setIsCartOpened: () => {},\n  items: [{}],\n  totalAmount: 0,\n  addItem: (item) => {},\n  removeItem: (id) => {},\n});\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\nconst cartReducer = (state, action) => {\n  return defaultCartState;\n};\n\nexport function CartContextProvider(props) {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState,\n    init\n  );\n\n  const [isCartOpened, setIsCartOpened] = useState(false);\n  const addItemToCartHandler = () => {};\n  const removeItemFromCartHandler = () => {};\n\n  const ctxvalue = {\n    isCartOpened: isCartOpened,\n    setIsCartOpened: setIsCartOpened,\n    items: cartState.items,\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n  return (\n    <CartContext.Provider value={ctxvalue}>\n      {props.children}\n    </CartContext.Provider>\n  );\n}\nexport default CartContext;\n"]},"metadata":{},"sourceType":"module"}