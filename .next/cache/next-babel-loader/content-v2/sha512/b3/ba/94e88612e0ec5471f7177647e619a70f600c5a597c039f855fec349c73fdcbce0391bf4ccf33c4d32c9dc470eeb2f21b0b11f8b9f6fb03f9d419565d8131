{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ivo/Desktop/Tutorials/Maximilaian/react course/store/cart-context.js\";\nimport React, { useReducer, useState } from \"react\";\nconst CartContext = /*#__PURE__*/React.createContext({\n  isCartOpened: () => {},\n  setIsCartOpened: () => {},\n  items: [{}],\n  totalAmount: 0,\n  addItem: item => {},\n  removeItem: id => {}\n});\nconst defaultCartState = {\n  items: [{}],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nexport function CartContextProvider(props) {\n  const {\n    0: cartState,\n    1: dispatchCartAction\n  } = useReducer(cartReducer, defaultCartState);\n  const {\n    0: isCartOpened,\n    1: setIsCartOpened\n  } = useState(false);\n\n  const addItemToCartHandler = item => {\n    console.log(item);\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    isCartOpened: isCartOpened,\n    setIsCartOpened: setIsCartOpened,\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\nexport default CartContext;","map":{"version":3,"sources":["/Users/ivo/Desktop/Tutorials/Maximilaian/react course/store/cart-context.js"],"names":["React","useReducer","useState","CartContext","createContext","isCartOpened","setIsCartOpened","items","totalAmount","addItem","item","removeItem","id","defaultCartState","cartReducer","state","action","type","updatedItems","concat","updatedTotalAmount","price","amount","CartContextProvider","props","cartState","dispatchCartAction","addItemToCartHandler","console","log","removeItemFromCartHandler","cartContext","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,YAAY,EAAE,MAAM,CAAE,CADgB;AAEtCC,EAAAA,eAAe,EAAE,MAAM,CAAE,CAFa;AAGtCC,EAAAA,KAAK,EAAE,CAAC,EAAD,CAH+B;AAItCC,EAAAA,WAAW,EAAE,CAJyB;AAKtCC,EAAAA,OAAO,EAAGC,IAAD,IAAU,CAAE,CALiB;AAMtCC,EAAAA,UAAU,EAAGC,EAAD,IAAQ,CAAE;AANgB,CAApB,CAApB;AASA,MAAMC,gBAAgB,GAAG;AACvBN,EAAAA,KAAK,EAAE,CAAC,EAAD,CADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAIA,MAAMM,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACR,KAAN,CAAYY,MAAZ,CAAmBH,MAAM,CAACN,IAA1B,CAArB;AACA,UAAMU,kBAAkB,GACtBL,KAAK,CAACP,WAAN,GAAoBQ,MAAM,CAACN,IAAP,CAAYW,KAAZ,GAAoBL,MAAM,CAACN,IAAP,CAAYY,MADtD;AAEA,WAAO;AAAEf,MAAAA,KAAK,EAAEW,YAAT;AAAuBV,MAAAA,WAAW,EAAEY;AAApC,KAAP;AACD;;AAED,SAAOP,gBAAP;AACD,CATD;;AAWA,OAAO,SAASU,mBAAT,CAA6BC,KAA7B,EAAoC;AACzC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAAkCzB,UAAU,CAChDa,WADgD,EAEhDD,gBAFgD,CAAlD;AAKA,QAAM;AAAA,OAACR,YAAD;AAAA,OAAeC;AAAf,MAAkCJ,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMyB,oBAAoB,GAAIjB,IAAD,IAAU;AACrCkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AACAgB,IAAAA,kBAAkB,CAAC;AAAET,MAAAA,IAAI,EAAE,KAAR;AAAeP,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAHD;;AAIA,QAAMoB,yBAAyB,GAAIlB,EAAD,IAAQ;AACxCc,IAAAA,kBAAkB,CAAC;AAAET,MAAAA,IAAI,EAAE,QAAR;AAAkBL,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMmB,WAAW,GAAG;AAClB1B,IAAAA,YAAY,EAAEA,YADI;AAElBC,IAAAA,eAAe,EAAEA,eAFC;AAGlBC,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KAHC;AAIlBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAJL;AAKlBC,IAAAA,OAAO,EAAEkB,oBALS;AAMlBhB,IAAAA,UAAU,EAAEmB;AANM,GAApB;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGP,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AACD,eAAe7B,WAAf","sourcesContent":["import React, { useReducer, useState } from \"react\";\n\nconst CartContext = React.createContext({\n  isCartOpened: () => {},\n  setIsCartOpened: () => {},\n  items: [{}],\n  totalAmount: 0,\n  addItem: (item) => {},\n  removeItem: (id) => {},\n});\n\nconst defaultCartState = {\n  items: [{}],\n  totalAmount: 0,\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    return { items: updatedItems, totalAmount: updatedTotalAmount };\n  }\n\n  return defaultCartState;\n};\n\nexport function CartContextProvider(props) {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const [isCartOpened, setIsCartOpened] = useState(false);\n\n  const addItemToCartHandler = (item) => {\n    console.log(item);\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    isCartOpened: isCartOpened,\n    setIsCartOpened: setIsCartOpened,\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n}\nexport default CartContext;\n"]},"metadata":{},"sourceType":"module"}